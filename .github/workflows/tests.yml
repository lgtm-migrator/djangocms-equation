name: "Tests"
on: [push, pull_request]

jobs:
  flake8:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 djangocms_equation tests

  docs:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install .
          pip install -r requirements_dev.txt
      - name: Build docs
        run: |
          make --directory=docs clean html

  docs-links:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install .
          pip install -r requirements_dev.txt
      - name: Check doc links
        run: |
          make --directory=docs clean linkcheck

  test-py36-37:
    runs-on: ubuntu-latest
    needs: [flake8, docs]
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7]
        version_combinations:
          [
            { "django": 1.11, "cms": 3.4 },
            { "django": 1.11, "cms": 3.5 },
            { "django": 1.11, "cms": 3.6 },
            { "django": 1.11, "cms": 3.7 },
            { "django": "2.0", "cms": 3.6 },
            { "django": "2.0", "cms": 3.7 },
            { "django": 2.1, "cms": 3.7 },
            { "django": 2.1, "cms": 3.6 },
            { "django": 2.2, "cms": 3.7 },
          ]

    steps:
      - uses: actions/checkout@v1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Compile assets
        run: |
          npm i
          npm run publish
      - name: Start docker-compose
        run: |
          docker-compose up -d
          docker-compose ps
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -U pip
          pip install -U -e .
          pip install -U -r requirements_dev.txt
          pip install 'django==${{ matrix.version_combinations.django }}.*' 'django-cms==${{ matrix.version_combinations.cms }}.*'
      - name: Show installed packages
        run: pip freeze

      - name: Run tests django==${{ matrix.version_combinations.django }} && django-cms==${{ matrix.version_combinations.cms }}
        run: |
          coverage erase
          coverage run setup.py test
          coverage report
          coverage xml

      - name: Upload Screenshots Artifact on fail
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: screenshots
          path: test_screenshots
      - name: Percy Upload
        if: matrix.version_combinations.django == 2.1 && matrix.version_combinations.cms == 3.7 && matrix.python-version == 3.7
        run: |
          python tests/manage.py test utils.percy_upload
          printenv
      - name: Codecov Upload
        continue-on-error: true
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.xml

  test-py27-35:
    runs-on: ubuntu-latest
    needs: [flake8, docs]
    strategy:
      fail-fast: false
      matrix:
        version_combinations:
          [
            { "django": 1.11, "cms": 3.4, "python-version": 2.7 },
            { "django": 1.11, "cms": 3.5, "python-version": 2.7 },
            { "django": 1.11, "cms": 3.6, "python-version": 2.7 },
            { "django": 1.11, "cms": 3.7, "python-version": 2.7 },
            { "django": 1.11, "cms": 3.4, "python-version": 3.5 },
            { "django": 1.11, "cms": 3.5, "python-version": 3.5 },
            { "django": 1.11, "cms": 3.6, "python-version": 3.5 },
            { "django": 1.11, "cms": 3.7, "python-version": 3.5 },
            { "django": "2.0", "cms": 3.6, "python-version": 3.5 },
            { "django": "2.0", "cms": 3.7, "python-version": 3.5 },
            { "django": 2.1, "cms": 3.6, "python-version": 3.5 },
            { "django": 2.1, "cms": 3.7, "python-version": 3.5 },
          ]

    steps:
      - uses: actions/checkout@v1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Compile assets
        run: |
          npm i
          npm run publish
      - name: Start docker-compose
        run: |
          docker-compose up -d
          docker-compose ps
      - name: Set up Python ${{ matrix.version_combinations.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.version_combinations.python-version }}

      - name: Install dependencies
        run: |
          pip install -U pip
          pip install -U -e .
          pip install -U -r requirements_dev.txt
          pip install 'django==${{ matrix.version_combinations.django }}.*' 'django-cms==${{ matrix.version_combinations.cms }}.*'
      - name: Show installed packages
        run: pip freeze

      - name: Run tests django==${{ matrix.version_combinations.django }} && django-cms==${{ matrix.version_combinations.cms }}
        run: |
          coverage erase
          coverage run setup.py test
          coverage report
          coverage xml

      - name: Upload Screenshots Artifact on fail
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: screenshots
          path: test_screenshots
      - name: Codecov Upload
        continue-on-error: true
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.xml

  deploy:
    runs-on: [ubuntu-latest]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [test-py36-37, test-py27-35]
    steps:
      - uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Compile assets
        run: |
          npm i
          npm run publish
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U -r requirements_dev.txt
          pip install -U .
      - name: Build dist
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
